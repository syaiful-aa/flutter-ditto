name: Playground CI/CD

on:
  issue_comment:
    types:
      - created

permissions: write-all

jobs:
  setup:
    runs-on: ubuntu-latest
    if: github.event.issue.pull_request && startsWith(github.event.comment.body, '/fire') 
    steps:
      - name: Dump GitHub context
        env:
          GITHUB_CONTEXT: ${{ toJSON(github) }}
        run: |
          echo "${{ vars }}"
          echo "$GITHUB_CONTEXT"

      - name: get pull request metadata
        uses: xt0rted/pull-request-comment-branch@v1
        id: comment-branch

      - name: get PR details
        uses: 8BitJonny/gh-get-current-pr@2.1.3
        id: get-pr-details
        with:
          github-token: ${{ github.token }}
          sha: ${{ steps.comment-branch.outputs.head_sha }}

      - name: setup branch
        uses: actions/checkout@v3
        with:
          ref: ${{ steps.comment-branch.outputs.head_ref }}

      - name: Setup SSH Key
        uses: webfactory/ssh-agent@v0.7.0
        with:
          ssh-private-key: ${{ secrets.CI_SSH_KEY }}

      - name: simulate test
        id: get-app-testing
        run: |
          echo "agriaku_coin=agriaku_coin : 46.3% (62 of 134 lines)" >> $GITHUB_OUTPUT
          echo "agriaku_mitra=agriaku_mitra : 100.0% (11 of 11 lines)" >> $GITHUB_OUTPUT
          echo "authentication_module=authentication_module : 94.5% (1109 of 1173 lines)" >> $GITHUB_OUTPUT
          echo "discovery_module=discovery_module : 84.8% (1063 of 1254 lines)" >> $GITHUB_OUTPUT
          echo "domain_module=domain_module : 29.6% (270 of 911 lines)" >> $GITHUB_OUTPUT
          echo "mitra_datasource=mitra_datasource : 27.5% (520 of 1891 lines)" >> $GITHUB_OUTPUT
          echo "product_module=product_module : 81.9% (1340 of 1637 lines)" >> $GITHUB_OUTPUT
          echo "review_module=review_module : 99.8% (428 of 429 lines)" >> $GITHUB_OUTPUT
          echo "shopping_list_module=shopping_list_module : 91.6% (1018 of 1111 lines)" >> $GITHUB_OUTPUT
          echo "transaction_module=transaction_module : 73.5% (1839 of 2502 lines)" >> $GITHUB_OUTPUT

      - name: find average coverage
        id: get-app-coverage-average
        run: |
          echo "coverage_average=none" >> $GITHUB_OUTPUT
        
      - name: create comment
        id: testing-result-comment
        uses: peter-evans/create-or-update-comment@v2
        with:
          issue-number: ${{ steps.get-pr-details.outputs.number }}
          body: |
            #Job Summary
            
            ```
            ${{steps.get-app-coverage-average.outputs.coverage_average}}
            ```
            
            ${{ toJson(steps.get-app-testing.outputs.*) }}
            

            for further detail you can check this action summary
            https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}

      - name: compare testing result with last release
        id: compare
        run: |
          echo "${{ vars.last_release_test_report }}" | base64 --decode

      - name: update current result
        run: |
          curl -L \
          -X PATCH \
          -H "Accept: application/vnd.github+json" \
          -H "Authorization: Bearer ${{ secrets.PAT }}" \
          https://api.github.com/repos/${{ github.repository }}/actions/variables/LAST_RELEASE_TEST_REPORT \
          -d '{
              "value":"$(base64 -i OUTPUT)"
            }'

      - name: last
        run: |
          delimiter="$(openssl rand -hex 8)"
          echo "result<<${delimiter}" >> "${GITHUB_OUTPUT}"
          echo "$(cat OUTPUT)" >> "${GITHUB_OUTPUT}"
          echo "${delimiter}" >> "${GITHUB_OUTPUT}"
          echo "---"
          cat $GITHUB_OUTPUT
          
 
          

