name: Playground CI/CD

on:
  issue_comment:
    types:
      - created

permissions: write-all

jobs:
  setup:
    runs-on: ubuntu-latest
    if: github.event.issue.pull_request && startsWith(github.event.comment.body, '/fire') 
    steps:
      - name: Dump GitHub context
        env:
          GITHUB_CONTEXT: ${{ toJSON(github) }}
        run: |
          echo "${{ vars }}"
          echo "$GITHUB_CONTEXT"

      - name: get pull request metadata
        uses: xt0rted/pull-request-comment-branch@v1
        id: comment-branch

      - name: get PR details
        uses: 8BitJonny/gh-get-current-pr@2.1.3
        id: get-pr-details
        with:
          github-token: ${{ github.token }}
          sha: ${{ steps.comment-branch.outputs.head_sha }}

      - name: setup branch
        uses: actions/checkout@v3
        with:
          ref: ${{ steps.comment-branch.outputs.head_ref }}

      - name: Setup SSH Key
        uses: webfactory/ssh-agent@v0.7.0
        with:
          ssh-private-key: ${{ secrets.CI_SSH_KEY }}

      - name: simulate test
        id: get-app-testing
        run: |
          echo "agriaku_coin=agriaku_coin : 46.3% (62 of 134 lines)" >> $GITHUB_OUTPUT
          echo "agriaku_mitra=agriaku_mitra : 100.0% (11 of 11 lines)" >> $GITHUB_OUTPUT
          echo "authentication_module=authentication_module : 94.5% (1109 of 1173 lines)" >> $GITHUB_OUTPUT
          echo "discovery_module=discovery_module : 84.8% (1063 of 1254 lines)" >> $GITHUB_OUTPUT
          echo "domain_module=domain_module : 29.6% (270 of 911 lines)" >> $GITHUB_OUTPUT
          echo "mitra_datasource=mitra_datasource : 27.5% (520 of 1891 lines)" >> $GITHUB_OUTPUT
          echo "product_module=product_module : 81.9% (1340 of 1637 lines)" >> $GITHUB_OUTPUT
          echo "review_module=review_module : 99.8% (428 of 429 lines)" >> $GITHUB_OUTPUT
          echo "shopping_list_module=shopping_list_module : 91.6% (1018 of 1111 lines)" >> $GITHUB_OUTPUT
          echo "transaction_module=transaction_module : 73.5% (1839 of 2502 lines)" >> $GITHUB_OUTPUT

          coverage_current="release_version : 2.19.0"
          coverage_current="${coverage_current} - agriaku_coin : 46.3% (62 of 134 lines)"
          coverage_current="${coverage_current} - agriaku_mitra : 100.0% (11 of 11 lines)"
          coverage_current="${coverage_current} - authentication_module : 94.5% (1109 of 1173 lines)"
          coverage_current="${coverage_current} - discovery_module : 84.8% (1063 of 1254 lines)"
          coverage_current="${coverage_current} - domain_module : 29.6% (270 of 911 lines)"
          coverage_current="${coverage_current} - mitra_datasource : 27.5% (520 of 1891 lines)"
          coverage_current="${coverage_current} - product_module : 81.9% (1340 of 1637 lines)"
          coverage_current="${coverage_current} - review_module : 99.8% (428 of 429 lines)"
          coverage_current="${coverage_current} - shopping_list_module : 91.6% (1018 of 1111 lines)"
          coverage_current="${coverage_current} - transaction_module : 73.5% (1839 of 2502 lines)"

          coverage_current="$( echo $coverage_current | sed 's/% (/, /g' |sed 's/ of /, /g' | sed 's/ lines)//g')"
          echo "coverage_current=$coverage_current" >> $GITHUB_OUTPUT

          echo "coverage_current" 
          echo $coverage_current

          echo "---"

          echo "coverage_previous" 
          echo "${{ vars.LAST_RELEASE_TEST_REPORT }}"

      - name: compare
        id: compare-coverage
        # uses: Agriaku/agriaku_app_actions/compare-coverage@v1.5.0
        uses: syaiful-aa/actions-experiment/compare-coverage@v3.4.0
        with:
          previous_data: ${{ vars.LAST_RELEASE_TEST_REPORT }}
          current_data: ${{ steps.get-app-testing.outputs.coverage_current }}

      - name: process output
        run: |
          echo "result"
          echo ${{ steps.compare-coverage.outputs.comparison_result }} > xxx
  
      - name: find average coverage
        id: get-app-coverage-average
        run: |
          echo "coverage_average=${{ steps.compare-coverage.outputs.current_average_coverage}}" >> $GITHUB_OUTPUT

      - name: create comment
        id: testing-result-comment
        uses: peter-evans/create-or-update-comment@v2
        with:
          issue-number: ${{ steps.get-pr-details.outputs.number }}
          body: |
            #Job Summary
            
            ```
            ${{steps.compare-coverage.outputs.current_average_coverage}}
            ```
            
            ${{ toJson(steps.get-app-testing.outputs.*) }}
            

            for further detail you can check this action summary
            https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}

      
      # - name: compare testing result with last release
      #   id: compare-coverage
      #   run: |
      #     # load previous report
      #     echo "${{ vars.LAST_RELEASE_TEST_REPORT }}" | base64 --decode > coverage_previous
      #     cat coverage_previous

      #     # assign current release coverage to step outputs
      #     cat coverage_current
      #     echo "updated_value=$(cat coverage_current | base64 | tr -d '[:space:]')" >> $GITHUB_OUTPUT

      #     # compare

      #     # assign comparison result to step outputs
      #     delimiter="$(openssl rand -hex 8)"
      #     echo "result<<${delimiter}" >> $GITHUB_OUTPUT
      #     echo "$(cat coverage_comparison)" >> $GITHUB_OUTPUT
      #     echo "${delimiter}" >> $GITHUB_OUTPUT

      - name: create coverage comparison comment
        id: coverage-comparison-comment
        uses: peter-evans/create-or-update-comment@v2
        with:
          issue-number: ${{ steps.get-pr-details.outputs.number }}
          body: |
            ## Coverage Comparison
            
            ```
            ${{steps.compare-coverage.outputs.comparison_result}}
            ```

      - name: update latest release report
        run: |
          curl -L \
          -X PATCH \
          -H "Accept: application/vnd.github+json" \
          -H "Authorization: Bearer ${{ secrets.PAT }}" \
          https://api.github.com/repos/${{ github.repository }}/actions/variables/LAST_RELEASE_TEST_REPORT \
          -d '{
              "value":"${{ steps.get-app-testing.outputs.coverage_current }}"
            }'

 
          

