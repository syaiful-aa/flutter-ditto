name: Train CI/CD

on:
  issue_comment:
    types:
      - created

jobs:
  setup:
    runs-on: ubuntu-latest
    if: github.event.issue.pull_request && startsWith(github.event.comment.body, '/fire') 
    steps:
      - name: Dump GitHub context
        env:
          GITHUB_CONTEXT: ${{ toJSON(github) }}
        run: |
          echo "${{ vars }}"
          echo "$GITHUB_CONTEXT"

      - name: get pull request metadata
        uses: xt0rted/pull-request-comment-branch@v1
        id: comment-branch

      - name: get PR details
        uses: 8BitJonny/gh-get-current-pr@2.1.3
        id: get-pr-details
        with:
          github-token: ${{ github.token }}
          sha: ${{ steps.comment-branch.outputs.head_sha }}
      
      - name: setup branch
        uses: actions/checkout@v3
        with:
          ref: ${{ steps.comment-branch.outputs.head_ref }}
      
      - name: Setup SSH Key
        uses: webfactory/ssh-agent@v0.7.0
        with:
          ssh-private-key: ${{ secrets.CI_SSH_KEY }}

      - name: Get App Version from pubspec.yaml
        id: get-app-version
        run: |
          app_version=$(cat ./app/pubspec.yaml | grep 'version' | cut -d ':' -f2 | cut -d '+' -f1 | sed 's/ //')
          echo "result=$app_version" >> $GITHUB_OUTPUT

      - name: release tag message
        id: release-tag-message
        # uses: Agriaku/agriaku_app_actions/release-tag@v1.6.0
        uses: syaiful-aa/actions-experiment/release-tag@v3.5.0
        with:
          pr_body: ${{ steps.get-pr-details.outputs.pr_body }}
      
      # - name: save comment to file
      #   id: save-comment
      #   shell: bash
      #   run: |
      #     # PR_BODY=$(echo "${{ github.event.issue.body }}" | tr -d '\r')
      #     # echo "${PR_BODY}" > out

      #     PR_BODY=$(echo "${{ github.event.issue.body }}" | awk '{ sub("\r$", ""); print }')
      #     echo "${PR_BODY}" > out

      #     # {
      #     # echo '<<EOF'
      #     # ${{ steps.get-pr-details.outputs.pr_body }} 
      #     # echo EOF
      #     # } >> out
          

      #     # delimiter="$(openssl rand -hex 8)"
      #     # echo "result<<${delimiter}" >> $GITHUB_OUTPUT
      #     # echo ${{ steps.get-pr-details.outputs.pr_body }} >> $GITHUB_OUTPUT
      #     # echo "${delimiter}" >> $GITHUB_OUTPUT

      - name: play
        run: |
          echo "start"

          delimiter="$(openssl rand -hex 8)"
          echo "<<${delimiter}" >> out
          echo "${{ steps.release-tag-message.outputs.message }}" >> out
          echo "${delimiter}" >> out

          cat out

      # - name: create comment
      #   uses: peter-evans/create-or-update-comment@v2
      #   with:
      #     issue-number: ${{ steps.get-pr-details.outputs.number }}
      #     body: |
      #       ${{steps.release-tag-message.outputs.message}}

      - name: Tag new target
        run: |
          tag="v${{ steps.get-app-version.outputs.result }}"
          git config user.email "syaiful.salam@agriaku.com"
          git config user.name "syaiful-aa"
          git tag -f $tag -m $'${{steps.release-tag-message.outputs.message}}'
          git push -f origin $tag


          

      

